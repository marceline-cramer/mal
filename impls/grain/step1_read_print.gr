module Mal_step1_read_print

include "./reader"
include "./types"
include "result"
include "string"
include "sys/file"

let prompt = () => {
  let prompt = String.encode("user> ", String.UTF8)
  File.fdWrite(File.stdout, prompt)
  let result = File.fdRead(File.stdin, 1024)
  let (line, _len) = Result.unwrap(result)
  let decoded = String.decode(line, String.UTF8)
  let decoded = String.trim(decoded)
  decoded
}

let eval = (input) => Ok(input)

let rep = (input) => {
  let output = match (Reader.read_str(input)) {
    Ok(parsed) => match (eval(parsed)) {
      Ok(result) => Types.pr_str(result),
      Err(err) => err
    },
    Err(err) => err
  }

  print(output)
}

while(true) {
  rep(prompt())
}
